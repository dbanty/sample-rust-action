name: sample-rust-action
description: An example GitHub Action written in Rust, generated from [dbanty/rust-github-action-template](https://github.com/dbanty/rust-github-action-template). You can either use this GitHub template and customize it yourself, or `cargo generate dbanty/rust-github-action-template` to create a new repo from this template. Any issues should be opened in the upstream template.
author: Dylan Anthony <dbanty@users.noreply.github.com>
inputs:
  error:
    description: 'The error message to display, if any'
    required: false
    default: ''
outputs:
  error:
    value: ${{ steps.run.outputs.error }}
    description: 'The description of any error that occurred'
runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_name=${{ env.action_name }}" >> $GITHUB_ENV
        echo "action_org=dbanty" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: Write-Output "version=$(Split-Path -Leaf ${{ github.action_path }})" >> $Env:GITHUB_OUTPUT

    - name: Get Action URI (latest)  # This runs for integration tests only
      shell: bash
      if: steps.get_action_version.outputs.version == env.action_name
      run: echo "action_uri=https://github.com/${{ env.action_org }}/${{ env.action_name }}/releases/latest/download/${{ runner.os }}.tgz" >> $GITHUB_ENV

    - name: Get Action URI (specific version)  # This runs for external consumers of the action
      shell: bash
      if: steps.get_action_version.outputs.version != env.action_name
      run: echo "action_uri=https://github.com/${{ env.action_org }}/${{ env.action_name }}/releases/download/${{ steps.get_action_version.outputs.version }}/${{ runner.os }}.tgz" >> $GITHUB_ENV

    - name: Download Action
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri ${{ env.action_uri }} -OutFile archive.tgz
        tar -xzf archive.tgz

    - name: Set Binary Name
      shell: bash
      run: echo "binary_name=$(if [[ ${{ runner.os }} == 'Windows' ]]; then echo '${{ env.action_name }}.exe'; else echo '${{ env.action_name }}'; fi)" >> $GITHUB_ENV

    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.error }}"
